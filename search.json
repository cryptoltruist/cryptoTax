[{"path":"https://cryptoltruist.github.io/cryptoTax/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Mr. Cryptoltruist Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/TODOS.html","id":null,"dir":"","previous_headings":"","what":"Development roadmap (to-do list)","title":"Development roadmap (to-do list)","text":"Shakepay: include CAD referrals rewards Shakepay: add support sales… Write new function get latest transaction dates exchanges. Write new function check negative balances appear. Write vignette general workflow using prepare_list_prices, etc. Superficial loss needs look least 30 days new year (assuming transaction occured last day year). Therefore, filtering year, first calculate superficial losses say January 30 next year, end filter selected year. Fix duplicated columns sup loss calculations Better error message providing first buy transactions (ACB…) Check trading exchanges prices sells buys match NA fees, check replace 0 ACB instead exchange… Detect new transaction types accounted Replace -loops dplyr (e.g., ACB) increase efficiency Think using data.table dtplyr increase efficiency Clarify time zones year year transition days! Still follow-exchange time isn’t specified know whether EST EDT time! Including: Wealthsimple. price fetched priceR, indicate source price accordingly Add option change whether different transaction types (cashback, airdrops) considered part taxable revenue stream (explain Tax report) report_revenues(), better clearly accommodate tax year Correct “Total time elapsed:” minutes seconds seconds Add custom import non-sense defaults, also possibility custom columns. Also add option time zone. Make sample datasets (2 exchanges, combine ), e.g. CDC, ShakePay, Newton. Clean scripts; optimize code renaming names top, etc. Check https://github.com/BittyTax/BittyTax general inspiration Finish Shiny app: editable table, see https://www.r-bloggers.com/2019/04/edit-datatables--r-shiny-app/","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"basic-acb","dir":"Articles","previous_headings":"","what":"Basic ACB","title":"Adjusted Cost Base","text":"begin, replicate basic ACB example showcased https://www.adjustedcostbase.ca/blog/--calculate-adjusted-cost-base-acb--capital-gains/  first generate data: Next, generate calculations achieve following result:","code":"library(cryptoTax) data <- adjustedcostbase.ca_1 data #>         date transaction quantity price fees #> 1 2014-03-03         buy      100    50   10 #> 2 2014-05-01        sell       50   120   10 #> 3 2014-07-18         buy       50   130   10 #> 4 2014-09-25        sell       40    90   10 ACB(data, spot.rate = \"price\", sup.loss = FALSE) #>         date transaction quantity price fees total.price total.quantity  ACB #> 1 2014-03-03         buy      100    50   10        5000            100 5010 #> 2 2014-05-01        sell       50   120   10        6000             50 2505 #> 3 2014-07-18         buy       50   130   10        6500            100 9015 #> 4 2014-09-25        sell       40    90   10        3600             60 5409 #>   ACB.share gains #> 1     50.10    NA #> 2     50.10  3485 #> 3     90.15    NA #> 4     90.15   -16"},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"superficial-losses","dir":"Articles","previous_headings":"","what":"Superficial losses","title":"Adjusted Cost Base","text":"now replicate advanced superficial loss example showcased https://www.adjustedcostbase.ca/blog/---superficial-loss-rule/.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"example-1","dir":"Articles","previous_headings":"Superficial losses","what":"Example 1","title":"Adjusted Cost Base","text":"first demonstrate “Violation Superficial Loss Rule” using regular ACB without accounting superficial losses:  Per default, lot columns provide much information possible. make look short adjustedcostbase.ca example, can subselect relevant columns: Next, correct way, accounting superficial losses:","code":"data <- adjustedcostbase.ca_2 x <- ACB(data, spot.rate = \"price\", sup.loss = FALSE) library(dplyr) select(x, date, transaction, quantity, price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.quantity  ACB ACB.share gains #> 1 2014-01-06         buy      100    50            100 5000        50    NA #> 2 2014-11-03        sell      100    30              0    0         0 -2000 #> 3 2014-11-04         buy      100    30            100 3000        30    NA #> 4 2015-12-02        sell      100    80              0    0         0  5000 x <- ACB(x, spot.rate = \"price\") select(x, date, transaction, quantity, price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.quantity  ACB ACB.share gains #> 1 2014-01-06         buy      100    50            100 5000        50    NA #> 2 2014-11-03        sell      100    30              0    0         0    NA #> 3 2014-11-04         buy      100    30            100 5000        50    NA #> 4 2015-12-02        sell      100    80              0    0         0  3000"},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"example-2","dir":"Articles","previous_headings":"Superficial losses","what":"Example 2","title":"Adjusted Cost Base","text":"continue second superficial loss example. first demonstrate “Violation Superficial Loss Rule” using regular ACB without accounting superficial losses:  Next, correct way, accounting superficial losses:","code":"data <- adjustedcostbase.ca_3 x <- ACB(data, spot.rate = \"price\", sup.loss = FALSE) select(x, date, transaction, quantity, price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.quantity  ACB ACB.share gains #> 1 2014-01-06         buy      100    50            100 5000        50    NA #> 2 2014-11-03         buy      100    30            200 8000        40    NA #> 3 2014-11-04        sell      100    30            100 4000        40 -1000 #> 4 2015-12-02        sell      100    80              0    0         0  4000 x <- ACB(data, spot.rate = \"price\") select(x, date, transaction, quantity, price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.quantity  ACB ACB.share gains #> 1 2014-01-06         buy      100    50            100 5000        50    NA #> 2 2014-11-03         buy      100    30            200 8000        40    NA #> 3 2014-11-04        sell      100    30            100 5000        50    NA #> 4 2015-12-02        sell      100    80              0    0         0  3000"},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"example-3","dir":"Articles","previous_headings":"Superficial losses","what":"Example 3","title":"Adjusted Cost Base","text":"continue third superficial loss example (first example https://www.adjustedcostbase.ca/blog/applying--superficial-loss-rule---partial-disposition--shares/). first demonstrate “Violation Superficial Loss Rule” using regular ACB without accounting superficial losses:","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"when-shares-are-sold-at-a-loss-and-then-partially-reacquired-within-the-superficial-loss-period","dir":"Articles","previous_headings":"Superficial losses > Example 3","what":"When Shares are Sold at a Loss and then Partially Reacquired within the Superficial Loss Period","title":"Adjusted Cost Base","text":"Next, correct way, accounting superficial losses:","code":"data <- adjustedcostbase.ca_4 x <- ACB(data, spot.rate = \"price\", sup.loss = FALSE) select(x, date, transaction, quantity, price, total.price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.price total.quantity ACB #> 1 2015-01-02         buy      100   3.0         300            100 300 #> 2 2015-04-09        sell      100   2.0         200              0   0 #> 3 2015-04-10         buy       25   2.2          55             25  55 #>   ACB.share gains #> 1       3.0    NA #> 2       0.0  -100 #> 3       2.2    NA x <- ACB(data, spot.rate = \"price\") select(x, date, transaction, quantity, price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.quantity ACB ACB.share gains #> 1 2015-01-02         buy      100   3.0            100 300       3.0    NA #> 2 2015-04-09        sell      100   2.0              0   0       0.0   -75 #> 3 2015-04-10         buy       25   2.2             25  80       3.2    NA"},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"example-4","dir":"Articles","previous_headings":"Superficial losses","what":"Example 4","title":"Adjusted Cost Base","text":"continue fourth superficial loss example (second example https://www.adjustedcostbase.ca/blog/applying--superficial-loss-rule---partial-disposition--shares/). first demonstrate “Violation Superficial Loss Rule” using regular ACB without accounting superficial losses:","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"when-shares-are-purchased-and-then-partially-sold-within-the-superficial-loss-period","dir":"Articles","previous_headings":"Superficial losses > Example 4","what":"When Shares are Purchased and then Partially Sold within the Superficial Loss Period","title":"Adjusted Cost Base","text":"Next, correct way, accounting superficial losses:","code":"data <- adjustedcostbase.ca_5 x <- ACB(data, spot.rate = \"price\", sup.loss = FALSE) select(x, date, transaction, quantity, price, total.price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.price total.quantity ACB #> 1 2015-04-09         buy      100     3         300            100 300 #> 2 2015-04-10        sell       80     2         160             20  60 #>   ACB.share gains #> 1         3    NA #> 2         3   -80 x <- ACB(data, spot.rate = \"price\") select(x, date, transaction, quantity, price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.quantity ACB ACB.share gains #> 1 2015-04-09         buy      100     3            100 300         3    NA #> 2 2015-04-10        sell       80     2             20  80         4    NA"},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/ACB.html","id":"when-multiple-acquisitions-andor-multiple-dispositions-occur-within-the-superficial-loss-period","dir":"Articles","previous_headings":"Superficial losses > Example 5","what":"When Multiple Acquisitions and/or Multiple Dispositions Occur Within the Superficial Loss Period","title":"Adjusted Cost Base","text":"examples given one, make . adjustedcostbase.ca writes web-based application support claiming partial losses automatically: Note AdjustedCostBase.ca automatically apply superficial loss rule . Although ’ll see superficial loss rule warnings displayed many cases, ’s edit transaction apply superficial loss rule. Also, cases ’re partially claiming loss due superficial loss rule, ’ll need manually calculate partial capital loss using methods described . Fortunately, cryptoTax allows claiming partial losses automatically. first demonstrate “Violation Superficial Loss Rule” using regular ACB without accounting superficial losses: Next, correct way, accounting superficial losses, include columns demonstration:","code":"data <- adjustedcostbase.ca_6 x <- ACB(data, spot.rate = \"price\", sup.loss = FALSE) select(x, date, transaction, quantity, price, total.price, total.quantity, ACB, ACB.share, gains) #>         date transaction quantity price total.price total.quantity ACB #> 1 2015-04-09         buy      150     3         450            150 450 #> 2 2015-04-10        sell       20     2          40            130 390 #> 3 2015-04-15         buy       50     3         150            180 540 #> 4 2015-04-20        sell       10     2          20            170 510 #> 5 2015-05-15        sell       80     2         160             90 270 #>   ACB.share gains #> 1         3    NA #> 2         3   -20 #> 3         3    NA #> 4         3   -10 #> 5         3   -80 x <- ACB(data, spot.rate = \"price\") select(   x, date, transaction, quantity, price, total.quantity,   suploss.range, sup.loss, sup.loss.quantity, ACB, ACB.share,   gains.uncorrected, gains.sup, gains.excess, gains ) #>         date transaction quantity price total.quantity #> 1 2015-04-09         buy      150     3            150 #> 2 2015-04-10        sell       20     2            130 #> 3 2015-04-15         buy       50     3            180 #> 4 2015-04-20        sell       10     2            170 #> 5 2015-05-15        sell       80     2             90 #>                    suploss.range sup.loss sup.loss.quantity      ACB ACB.share #> 1 2015-03-10 UTC--2015-05-09 UTC    FALSE                 0 450.0000  3.000000 #> 2 2015-03-11 UTC--2015-05-10 UTC     TRUE                20 410.0000  3.153846 #> 3 2015-03-16 UTC--2015-05-15 UTC    FALSE                 0 580.0000  3.222222 #> 4 2015-03-21 UTC--2015-05-20 UTC     TRUE                10 560.0000  3.294118 #> 5 2015-04-15 UTC--2015-06-14 UTC     TRUE                80 361.1765  4.013072 #>   gains.uncorrected gains.sup gains.excess     gains #> 1           0.00000        NA           NA        NA #> 2         -20.00000 -20.00000           NA        NA #> 3           0.00000        NA           NA        NA #> 4         -12.22222 -12.22222           NA        NA #> 5        -103.52941 -64.70588    -38.82353 -38.82353"},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"trades-transaction-fees","dir":"Articles","previous_headings":"","what":"Trades & transaction fees","title":"Tax treatments and decisions","text":"(https://www.adjustedcostbase.ca/blog/--calculate-adjusted-cost-base-acb--capital-gains) documentation needs integrated either side, makes sense integrate buy side. coin--coin trades, price purchased coin fetched coinmarketcap, reused price sold coin (available exchange ). way, price purchase sale match (using different spot rates two coins prevent prices matching).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"trading-fees-paid-in-third-currency","dir":"Articles","previous_headings":"Trades & transaction fees","what":"Trading fees paid in third currency","title":"Tax treatments and decisions","text":"Paying trading fees third currency (e.g., BNB CRO) considered sale fair market value coin quantity. fair market value also gets added ACB original trade.","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"cointracking","dir":"Articles","previous_headings":"Trades & transaction fees","what":"CoinTracking","title":"Tax treatments and decisions","text":"fee paid third currency (.e. coin part either sell buy) deducted total balance. common example BNB Binance. order correct third coin balance portfolio, need create additional transaction FEE fee. (https://cointracking.freshdesk.com/en/support/solutions/articles/29000007202-entering-fees)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"person-on-reddit","dir":"Articles","previous_headings":"Trades & transaction fees","what":"Person on reddit","title":"Tax treatments and decisions","text":"using CRO BNB pay fees, triggered disposition give rise capital gain loss. market value fee proceeds disposition CRO/BNB, also gets added ACB whatever coin bought. (https://www.reddit.com/r/BitcoinCA/comments/rmjz3e/is_it_a_tax_event_to_pay_trading_fees_with)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"fair-market-value","dir":"Articles","previous_headings":"","what":"Fair market value","title":"Tax treatments and decisions","text":"spot rate available exchange, scraped coinmarketcap (crypto2 package) average open close (rather high low). converting USD CAD, rate obtained priceR package (e.g., European Central Bank Statistical Data Warehouse).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"superficial-losses","dir":"Articles","previous_headings":"","what":"Superficial losses","title":"Tax treatments and decisions","text":"Superficial losses (+/- 30 days purchase) deducted total capital losses (including gas fees). New coins obtained airdrops like, form interest staking, treated buying context superficial loss. superficial loss quantity greater amount bought within 60 days, amount left end 60 days, amount bought/left counted superficial; excess counted valid capital loss. sale bring total quantity share/coin zero rebought within 30 days, full loss considered valid superficial.","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"taxtips-ca","dir":"Articles","previous_headings":"Superficial losses","what":"Taxtips.ca","title":"Tax treatments and decisions","text":"superficial loss added adjusted cost base (ACB) repurchased substitute shares. repurchased substitute shares sold, loss can claimed. (https://www.taxtips.ca/personaltax/investing/taxtreatment/superficial-losses---disallowed-losses.htm) capital losses exceed capital gains current year, can (don’t ) carry back losses 3 preceding taxation years deducted capital gains years. Capital losses can also carried forward indefinitely. shares bought, fully sold immediately ? Can capital loss claimed case? long shares sold, don’t repurchase shares within 30-day period following sale’s settlement date, can claim capital loss. Remember two conditions must apply superficial loss rule: shares must bought within 61-day period, , shares must still owned end period. case shares sold (nothing’s repurchased) superficial loss rule apply long don’t shares end 61-day period. (https://www.taxtips.ca/filing/capital-losses.htm)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"adjustedcostbase-ca","dir":"Articles","previous_headings":"Superficial losses","what":"adjustedcostbase.ca","title":"Tax treatments and decisions","text":"Avoid Headaches Deferring Entire Capital Loss Simplicity conditions partially applying superficial loss rule partial dispositions provide advantage Canadian investors. Instead using strict interpretation superficial loss rule kinds cases denies losses full, CRA allows investors partially claim loss. ’re obligated partially claim loss; can opt entire loss denied (carried forward cases). loss relatively small may worth headache performing calculations determine partially allowable loss. remember superficially loss rule denies capital loss, amount capital loss can usually added ACB reacquired shares, loss effectively carried forward opposed permanently denied. (https://www.adjustedcostbase.ca/blog/applying--superficial-loss-rule---partial-disposition--shares)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"superficial-gains","dir":"Articles","previous_headings":"","what":"Superficial gains","title":"Tax treatments and decisions","text":"thing superficial gains.","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"adjustedcostbase-ca-1","dir":"Articles","previous_headings":"Superficial gains","what":"adjustedcostbase.ca","title":"Tax treatments and decisions","text":"Since superficial loss rule denies capital losses certain circumstances, might ask, can capital gains avoided certain cases? example, sell shares realize capital gain, immediately repurchase shares, can call “superficial gain” defer capital gain? answer : defer capital gain thing “superficial gain.” capital gain taxable immediately current tax year, even shares repurchased within 30 days. (https://www.adjustedcostbase.ca/blog/---superficial-loss-rule)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"gasnetwork-fees","dir":"Articles","previous_headings":"","what":"Gas/network fees","title":"Tax treatments and decisions","text":"adopt conservative approach treat network fees disposition fair market value coins time transaction (triggers capital gain/loss tax event).","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"cointracking-1","dir":"Articles","previous_headings":"Gas/network fees","what":"CoinTracking","title":"Tax treatments and decisions","text":"Every transaction coin, buy, donation, spend fee taxable impact coin increase decrease value holding period buy time loose ownership coin. (https://cointracking.freshdesk.com/en/support/solutions/articles/29000007202-entering-fees)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"koinly","dir":"Articles","previous_headings":"Gas/network fees","what":"Koinly","title":"Tax treatments and decisions","text":"exchanges charge transfer fee move crypto. pay transfer fee CAD another fiat currency - tax free. time, ’ll pay transfer fees crypto. Spending crypto disposition, ’s taxable event subject Capital Gains Tax. means price asset increased since bought , spend crypto transfer - ’ll capital gain. CRA doesn’t guidance whether transfer fees allowable cost - don’t know can add cost basis adjusted cost basis rules. ’s unlikely transfer fees tax deductible. Therefore fees taken account gain calculation. value increase taxable benefit (e.g. need less amount coin pay fee). (https://koinly.io/guides/crypto-tax-canada) Sometimes transfer assets wallets, ’ll pay gas fee. However, Capital Gains Tax guidance countries quite clear can add fees associated acquiring disposing asset cost basis. ’re make transfer. isn’t clear guidance yet tax office. can choose take conservative aggressive approach crypto taxes. conservative approach treat taxable event. ’re spending ETH - like good service - ’s subject Capital Gains Tax. measured approach claim spent, recognize capital gain loss transaction. Finally, aggressive approach add cost basis. recommend conservative approach transfer fees approaches may stand scrutiny tax authorities. (https://koinly.io/blog/--gas-fees-----taxed)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"tokentax","dir":"Articles","previous_headings":"Gas/network fees","what":"TokenTax","title":"Tax treatments and decisions","text":"multiple ways approach tax treatment fees, ranging conservative aggressive. Please note recommend conservative approach. Conservative: Treat ETH fees spent instance taxable sales, spent ETH good service. Medium: Claim Ethereum spent fees removed holdings, don’t recognize capital gain loss. Aggressive: Claim ETH sale 0 USD, claiming capital loss ETH spent. also potentially add ETH transfer fees cost basis. However, IRS argue transfers necessary subsequent ETH sale take place, thus contentious tax standpoint. (https://tokentax.co/blog/-ethereum-gas-fees-tax-deductible)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"cointracker","dir":"Articles","previous_headings":"Gas/network fees","what":"CoinTracker","title":"Tax treatments and decisions","text":"Gas fees transfers can added back basis token. (https://www.cointracker.io/blog/--claim-tax-benefits---cryptocurrency-gas-fees)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"metricscpa-cpa-from-reddit","dir":"Articles","previous_headings":"Gas/network fees","what":"MetricsCPA (CPA from Reddit)","title":"Tax treatments and decisions","text":"Q: also add transfer fees cost basis ? e.g. transferring coin exchange wallet. : Yes, reasonable include , part costs. (https://www.reddit.com/r/BitcoinCA/comments/jwmn6h/comment/gcsn76a/?utm_source=share&utm_medium=web2x&context=3)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"foreign-income","dir":"Articles","previous_headings":"","what":"Foreign income","title":"Tax treatments and decisions","text":", revenue crypto considered foreign income, localized global ledger (blockchain), technically Canada. reason, one’s total acquisition cost greater $100,000 point tax year, one needs fill form T1135.","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"taxtips-ca-1","dir":"Articles","previous_headings":"Foreign income","what":"Taxtips.ca","title":"Tax treatments and decisions","text":"probably wise report cryptocurrency T1135, puts $100,000, according article Jamie Golombek, CPA, CA, CFP, CLU, TEP. considered intangible property located outside Canada. doesn’t cost anything report , save expensive penalties incurred reported later deemed CRA reportable. (https://www.taxtips.ca/filing/foreign-asset-reporting.htm)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"intuit","dir":"Articles","previous_headings":"Foreign income","what":"Intuit","title":"Tax treatments and decisions","text":"CRA views bitcoin “specified foreign property” Section 233.3 Income Tax Act. (https://quickbooks.intuit.com/ca/resources/taxes/--claim-cryptocurrency---income-tax--canada)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"taxable-income","dir":"Articles","previous_headings":"","what":"Taxable income","title":"Tax treatments and decisions","text":", revenue interest staking (well mining) considered taxable income similar nature revenue investment interest (like bank). Airdrops, rewards, referrals, promos, considered purchase 0$ ACB (including Shakepay, Brave, Presearch). Similarly credit card cashback, discounts considered purchase FMV (fair market value) time reception, income trigger tax event. includes certain services Crypto.com: Prepaid card cashback (including Spotify, Netflixy, Amazon Prime “reimbursements”) topping-phones internet purchases gift card purchases (rewards transferring CRO friend considered rebate, still taxable income like rewards) Exchange discount/rewards trading staking CRO exchange (Binance, etc.)","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"yahoo-finance","dir":"Articles","previous_headings":"Taxable income","what":"Yahoo Finance","title":"Tax treatments and decisions","text":"majority Canadian consumers don’t pay taxes credit card rewards. long ’re earning points, miles, cash back personal purchases (.e., business purchases), CRA look discounts coupons, income. Much like don’t report savings grocery coupons, won’t report credit card rewards tax filing. (https://ca.style.yahoo.com/credit-card-rewards-taxable-183034394.html)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"cra","dir":"Articles","previous_headings":"Taxable income","what":"CRA","title":"Tax treatments and decisions","text":"business income capital gain? income tax treatment cryptocurrency […] different depending whether […] activities personal activity (hobby) business activity. […] hobby pursued sufficiently commercial businesslike way, can considered business activity taxed . (https://www.canada.ca/en/revenue-agency/programs/-canada-revenue-agency-cra/compliance/digital-currency/cryptocurrency-guide.html)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"koinly-1","dir":"Articles","previous_headings":"Taxable income","what":"Koinly","title":"Tax treatments and decisions","text":"countries like Canada Germany see receiving airdrop tax free event, exception rather rule…. Canada Revenue Agency doesn’t view airdrops type income. (https://koinly.io/blog/crypto-airdrop-tax)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"cointracker-1","dir":"Articles","previous_headings":"Taxable income","what":"CoinTracker","title":"Tax treatments and decisions","text":"airdrops hard forks, unlike US guidance unclear, Canada cost basis zero coins. Therefore coins disposed entire proceeds considered capital gains (individuals) income (businesses). https://help.cointracker.io/en/articles/1920821---cryptocurrency-taxation-work--canada","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"coinpanda","dir":"Articles","previous_headings":"Taxable income","what":"CoinPanda","title":"Tax treatments and decisions","text":"cases, business activity needs involve repetitive actions time. … mining just personal hobby, pay capital gains tax later sell (dispose ) received coins. didn’t pay anything coins originally, cost basis considered zero capital gains equal market value (CAD) time sell coins future. … Canadian Revenue Agency released specific guidance staking cryptocurrency. staking similar nature mining cryptocurrencies, safest approach treat received coins staking similar fashion mining. … CRA issued specific guidance tax treatment cryptocurrency airdrops, safe approach pay capital gains tax later decide sell coins. Similar crypto received mining, assume cost basis equal zero pay anything acquire coins. (https://coinpanda.io/crypto-taxes-canada-cra)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"metricscpa-cpa-from-reddit-1","dir":"Articles","previous_headings":"Taxable income","what":"MetricsCPA (CPA from Reddit)","title":"Tax treatments and decisions","text":"Q: treat Shakepay sats? : case, cost basis 0. Shaking phone constitute earning income. say sell $10, $10 added income $5 (cap gains 50%) taxed. sale $10 cost basis 0. (https://www.reddit.com/r/BitcoinCA/comments/jwmn6h/comment/gi3fe3l/?utm_source=share&utm_medium=web2x&context=3)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"tsbcpa-cpa-from-reddit","dir":"Articles","previous_headings":"Taxable income","what":"TSBCPA (CPA from Reddit)","title":"Tax treatments and decisions","text":"love able shed light topic, however, factors play make difficult . Currently, areas received specific CRA guidance refrain providing general guidance matters. reasoning can risks involved depending aggressive conservative reporting crypto received. Treating income received usually conservative bet; adding cost base $0 can aggressive. ton different/varying information individuals accountants. […] general, want remain conservative (may always best approach), treating things income received achieve . staking rewards - generally always recommend treating income received. (https://www.reddit.com/r/BitcoinCA/comments/tvg6gc/accountants_of_reddit_please_help_clarify)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"interest-expense-on-money-borrowed-to-purchase-investments","dir":"Articles","previous_headings":"","what":"Interest expense on money borrowed to purchase investments","title":"Tax treatments and decisions","text":"Generally, interest expense money borrowed purchase investments purpose gaining producing income tax-deductible.","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"taxtips-ca-2","dir":"Articles","previous_headings":"Interest expense on money borrowed to purchase investments","what":"Taxtips.ca","title":"Tax treatments and decisions","text":"Interest deductible carrying charges claimed deduction income line 22100 (line 221) personal income tax return, completion Schedule 4 (federal). (https://www.taxtips.ca/personaltax/investing/interest-expense--money-borrowed--purchase-investments.htm)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/articles/references.html","id":"cra-1","dir":"Articles","previous_headings":"Interest expense on money borrowed to purchase investments","what":"CRA","title":"Tax treatments and decisions","text":"flexible approach tracing/linking borrowed money eligible uses applied repayment borrowed money single borrowing account (line credit, mortgage loan) used eligible ineligible purposes. CRA’s view, repayment principal portion borrowing reduce portions line credit, mortgage loan used eligible ineligible purposes. individual allocate repayment specifically ineligible portion borrowing. Instead, applying original eligible use percentage balance, interest $32,000 borrowed money (40% $80,000) deductible. (https://www.canada.ca/en/revenue-agency/services/tax/technical-information/income-tax/income-tax-folios-index/series-3-property-investments-savings-plans/series-3-property-investments-savings-plan-folio-6-interest/income-tax-folio-s3-f6-c1-interest-deductibility.html)  \\(~\\) \\(~\\) \\(~\\) \\(~\\) \\(~\\) \\(~\\)","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mr. Cryptoltruist. Author, maintainer.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cryptoltruist M (2023). cryptoTax: Crypto taxes R (Canada ). R package version 0.0.2, https://cryptoltruist.github.io/cryptoTax/.","code":"@Manual{,   title = {cryptoTax: Crypto taxes in R (Canada only)},   author = {Mr. Cryptoltruist},   year = {2023},   note = {R package version 0.0.2},   url = {https://cryptoltruist.github.io/cryptoTax/}, }"},{"path":"https://cryptoltruist.github.io/cryptoTax/index.html","id":"cryptotax-crypto-taxes-in-r-canada-only-","dir":"","previous_headings":"","what":"Crypto taxes in R (Canada only)","title":"Crypto taxes in R (Canada only)","text":"Disclaimer: financial advice. Use risks. guarantees whatsoever relation use package. Please consult tax professional necessary. Helps calculate crypto taxes R. First, allowing format .CSV files various exchanges one large dataframe organized transactions. Second, allowing calculate Adjusted Cost Base (ACB), ACB per share, realized unrealized capital gains/losses. Third, calculating revenues gained staking, interest, airdrops, etc. Fourth, calculating superficial losses well, desired. supports basic simple tax scenarios (now).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Crypto taxes in R (Canada only)","text":"install, use:","code":"remotes::install_github(\"cryptoltruist/cryptoTax\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/index.html","id":"acb-demo","dir":"","previous_headings":"","what":"ACB demo","title":"Crypto taxes in R (Canada only)","text":"calculating ACB, well superficial losses, see corresponding vignette.","code":"library(cryptoTax) data <- adjustedcostbase.ca_1 data ACB(data, spot.rate = \"price\", sup.loss = FALSE)"},{"path":"https://cryptoltruist.github.io/cryptoTax/index.html","id":"supported-exchanges","dir":"","previous_headings":"","what":"Supported exchanges","title":"Crypto taxes in R (Canada only)","text":"Currently, following exchanges supported format_* functions: Adalite Binance BlockFi Crypto.com (app, exchange, wallet) Celsius CoinSmart Exodus wallet Gemini Newton Pooltool (ADA) Presearch Shakepay support another exchange listed , please open issue. can also prepare file according style one exchanges use corresponding function.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/index.html","id":"workflow-demo","dir":"","previous_headings":"","what":"Workflow demo","title":"Crypto taxes in R (Canada only)","text":"","code":"# Prepare list of coins my.coins <- c(\"BTC\", \"CRO\", \"ETH\", \"ETHW\") list.prices <- prepare_list_prices(coins = my.coins, start.date = \"2021-01-01\") #> ❯ Scraping historical crypto data #> ❯ Processing historical crypto data # Note that for some exchanges this step may be unnecessary  # Load data and format shakepay file data(shakepay) formatted.shakepay <- format_shakepay(shakepay)  # Load data and format CDC file data(CDC) formatted.CDC <- format_CDC(CDC)  # Merge data from the different exchanges all.data <- merge_exchanges(formatted.shakepay, formatted.CDC)  # Format data with ACB formatted.ACB <- format_ACB(all.data) #> Process started at 2023-01-05 18:12:15. Please be patient as the transactions process. #> [Formatting ACB (progress bar repeats for each coin)...] #> Process ended at 2023-01-05 18:12:16. Total time elapsed: 0.97 minutes  # Let's get a preview of the output as.data.frame(formatted.ACB[c(1, 4, 8, 10, 19, 20), c(1:6, 7:14, 24:26)])"},{"path":"https://cryptoltruist.github.io/cryptoTax/index.html","id":"summary-info","dir":"","previous_headings":"","what":"Summary info","title":"Crypto taxes in R (Canada only)","text":"","code":"# Get latest ACB.share for each coin (ACB) report_overview(formatted.ACB,   today.data = TRUE, tax.year = \"2021\",   local.timezone = \"America/Toronto\" ) # Get summary of realized capital gains and losses report_summary(formatted.ACB,   today.data = TRUE, tax.year = \"2021\",   local.timezone = \"America/Toronto\" )"},{"path":"https://cryptoltruist.github.io/cryptoTax/index.html","id":"revenue-estimation","dir":"","previous_headings":"","what":"Revenue estimation","title":"Crypto taxes in R (Canada only)","text":"Disclaimer: financial advice. Use risks. guarantees whatsoever relation use package. Please consult tax professional necessary.","code":"table.revenues <- report_revenues(formatted.ACB, tax.year = \"2021\") #> Adding missing grouping variables: `exchange` table.revenues # Plot revenues by exchange crypto_pie(table.revenues) # Plot revenues by reward type crypto_pie(table.revenues, by = \"revenue.type\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/ACB.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate capital gains from realized gain transactions — ACB","title":"Calculate capital gains from realized gain transactions — ACB","text":"Calculate realized unrealized capital gains/losses","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/ACB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate capital gains from realized gain transactions — ACB","text":"","code":"ACB(   data,   transaction = \"transaction\",   price = \"price\",   quantity = \"quantity\",   fees = \"fees\",   total.price = \"total.price\",   spot.rate = \"spot.rate\",   as.revenue = c(\"staking\", \"interest\", \"mining\"),   sup.loss = TRUE,   cl = NULL )"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/ACB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate capital gains from realized gain transactions — ACB","text":"data dataframe transaction Name transaction column price Name price column quantity Name quantity column fees Name fees column total.price Name total.price column spot.rate Name spot.rate column .revenue Name .revenue column sup.loss Logical, whether calculate superficial losses cl Number cores use parallel processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/ACB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate capital gains from realized gain transactions — ACB","text":"","code":"if (FALSE) { ACB(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/CDC.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data set of a fictive Crypto.com transaction history file — CDC","title":"Sample data set of a fictive Crypto.com transaction history file — CDC","text":"fictive Crypto.com dataset demonstrate format_CDC().","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/CDC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data set of a fictive Crypto.com transaction history file — CDC","text":"","code":"CDC"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/CDC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data set of a fictive Crypto.com transaction history file — CDC","text":"data frame 19 rows 11 variables: Timestamp..UTC. date Transaction.Description transaction description Currency currency Amount quanity .Currency currency traded coin .Amount quanity traded coin Native.Currency usually CAD Native.Amount equivalent value CAD Native.Amount...USD. equivalent value USD Transaction.Kind Specific transaction identifier Transaction.Hash blockchain address withdrawing","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/CDC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample data set of a fictive Crypto.com transaction history file — CDC","text":"https://crypto.com/","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/USD2CAD.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert USD to CAD — USD2CAD","title":"Convert USD to CAD — USD2CAD","text":"function allows convert USD CAD.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/USD2CAD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert USD to CAD — USD2CAD","text":"","code":"USD2CAD(data, conversion = \"USD\", currency = \"CAD\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/USD2CAD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert USD to CAD — USD2CAD","text":"data data conversion convert currency convert ","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/USD2CAD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert USD to CAD — USD2CAD","text":"","code":"# Not work anymore # USD2CAD(date = \"2021-10-08\", conversion = \"USD\", currency = \"CAD\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/adjustedcostbase.ca_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data sets provided by adjustedcostbase.ca — adjustedcostbase.ca_1","title":"Sample data sets provided by adjustedcostbase.ca — adjustedcostbase.ca_1","text":"dataset adjustedcostbase.ca demonstrate adjusted cost base well capital gains/losses. Used demo gains() function.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/adjustedcostbase.ca_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data sets provided by adjustedcostbase.ca — adjustedcostbase.ca_1","text":"","code":"adjustedcostbase.ca_1  adjustedcostbase.ca_2  adjustedcostbase.ca_3  adjustedcostbase.ca_4  adjustedcostbase.ca_5  adjustedcostbase.ca_6"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/adjustedcostbase.ca_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data sets provided by adjustedcostbase.ca — adjustedcostbase.ca_1","text":"data frame 4 rows 4 variables: date date transaction buy sell quantity much stock/coin price spot rate, dollars fees transaction fees object class data.frame 4 rows 4 columns. object class data.frame 4 rows 4 columns. object class data.frame 3 rows 4 columns. object class data.frame 2 rows 4 columns. object class data.frame 5 rows 4 columns.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/adjustedcostbase.ca_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample data sets provided by adjustedcostbase.ca — adjustedcostbase.ca_1","text":"https://www.adjustedcostbase.ca/blog/--calculate-adjusted-cost-base-acb--capital-gains/","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto2fiat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a cryptocurrency value to fiat (e.g., CAD) — crypto2fiat","title":"Convert a cryptocurrency value to fiat (e.g., CAD) — crypto2fiat","text":"Format .csv file Newton later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto2fiat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a cryptocurrency value to fiat (e.g., CAD) — crypto2fiat","text":"","code":"crypto2fiat(coin, date, currency = \"CAD\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto2fiat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a cryptocurrency value to fiat (e.g., CAD) — crypto2fiat","text":"coin coin date date currency currency","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto2fiat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a cryptocurrency value to fiat (e.g., CAD) — crypto2fiat","text":"","code":"if (FALSE) { crypto2fiat(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/cryptoTax-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cryptoTax: Crypto taxes in R (Canada only) — cryptoTax-package","title":"cryptoTax: Crypto taxes in R (Canada only) — cryptoTax-package","text":"Helps calculate crypto taxes R. First, allowing format .CSV files various exchanges one large dataframe organized transactions. Second, allowing calculate Adjusted Cost Base (ACB), ACB per share, realized unrealized capital gains/losses. Third, calculating revenues gained staking, interest, airdrops, etc. Fourth, calculating superficial losses well. supports basic simple tax scenarios (now). *Disclaimer: financial advice. Use risks. guarantees whatsoever relation use package. Please consult tax professional necessary*.","code":""},{"path":[]},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/cryptoTax-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cryptoTax: Crypto taxes in R (Canada only) — cryptoTax-package","text":"Maintainer: Mr. Cryptoltruist 93457844+cryptoltruist@users.noreply.github.com","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a pie chart of your crypto revenues — crypto_pie","title":"Make a pie chart of your crypto revenues — crypto_pie","text":"Format .csv file Newton later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a pie chart of your crypto revenues — crypto_pie","text":"","code":"crypto_pie(table.revenues, by = \"exchange\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a pie chart of your crypto revenues — crypto_pie","text":"table.revenues revenue table plot plot element, one c(\"exchange\", \"revenue.type\").","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/crypto_pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a pie chart of your crypto revenues — crypto_pie","text":"","code":"if (FALSE) { crypto_pie(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/fetch_prices.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch prices of daily transactions — fetch_prices","title":"Fetch prices of daily transactions — fetch_prices","text":"Fetches daily prices coins crypto2 package.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/fetch_prices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch prices of daily transactions — fetch_prices","text":"","code":"fetch_prices(coin, data, coins.list)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/fetch_prices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch prices of daily transactions — fetch_prices","text":"coin coin data dataframe coins.list coins list","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/fetch_prices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch prices of daily transactions — fetch_prices","text":"","code":"if (FALSE) { fetch_prices(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_ACB.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats transactions with ACB — format_ACB","title":"Formats transactions with ACB — format_ACB","text":"Formats transaction data Adjusted Cost Base (ACB), along ACB per share realized capital gains losses.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_ACB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats transactions with ACB — format_ACB","text":"","code":"format_ACB(   data,   as.revenue = c(\"staking\", \"interest\", \"mining\"),   sup.loss = TRUE,   cl = NULL )"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_ACB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats transactions with ACB — format_ACB","text":"data dataframe .revenue treated revenue, list c(\"staking\", \"interest\", \"mining\"). sup.loss Logical, whether take superficial losses account. cl Number cores use parallel processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_ACB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formats transactions with ACB — format_ACB","text":"","code":"if (FALSE) { format_ACB(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_BSC.html","id":null,"dir":"Reference","previous_headings":"","what":"Format custom Binance Smart Chain file — format_BSC","title":"Format custom Binance Smart Chain file — format_BSC","text":"Format custom .csv transaction history file Binance Smart Chain wallet later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_BSC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format custom Binance Smart Chain file — format_BSC","text":"","code":"format_BSC(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_BSC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format custom Binance Smart Chain file — format_BSC","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_BSC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format custom Binance Smart Chain file — format_BSC","text":"","code":"if (FALSE) { format_BSC(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Crypto.com App file — format_CDC","title":"Format Crypto.com App file — format_CDC","text":"Format .csv transaction history file Crypto.com later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Crypto.com App file — format_CDC","text":"","code":"format_CDC(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Crypto.com App file — format_CDC","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Crypto.com App file — format_CDC","text":"aware CDC unfortunately include withdrawal fees exported transaction files (please lobby include feature). function attempts guess known withdrawal fees point time depending withdrawals made, withdrawal fees certainly inaccurate. make manual correction withdrawal fees using format_CDC, resulting dataframe.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Crypto.com App file — format_CDC","text":"","code":"if (FALSE) { format_CDC(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_rewards.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CDC exchange file (FOR REWARDS ONLY) — format_CDC_exchange_rewards","title":"Format CDC exchange file (FOR REWARDS ONLY) — format_CDC_exchange_rewards","text":"Format .csv transaction history file Crypto.com exchange later ACB processing. processes rewards withdrawal fees, trades (see format_CDC_exchange_trades ). download rewards/withdrawal fees data Crypto.com exchange CSV file, copy paste code save bookmark browser. javascript:(function(){function callback(){window.cdc()}var s=document.createElement(\"script\");s.src=\"https://cdn.jsdelivr.net/gh/ConorIA/cdc-csv@master/cdc.js\";(s.addEventListener){s.addEventListener(\"load\",callback,false)}else (s.readyState){s.onreadystatechange=callback}document.body.appendChild(s);})() log crypto.com exchange click bookmark saved. automatically download CSV contains Supercharger rewards, withdrawal fees, CRO staking interest (exchange stake), among others. Note code include initial referral reward CRO signup Crypto.com exchange. must added manually. WARNING: DOWNLOAD TRADES, REWARDS!","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_rewards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CDC exchange file (FOR REWARDS ONLY) — format_CDC_exchange_rewards","text":"","code":"format_CDC_exchange_rewards(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_rewards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CDC exchange file (FOR REWARDS ONLY) — format_CDC_exchange_rewards","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_rewards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format CDC exchange file (FOR REWARDS ONLY) — format_CDC_exchange_rewards","text":"","code":"if (FALSE) { format_CDC_exchange_rewards(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_trades.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CDC exchange file (FOR TRADES ONLY) — format_CDC_exchange_trades","title":"Format CDC exchange file (FOR TRADES ONLY) — format_CDC_exchange_trades","text":"Format .csv transaction history file Crypto.com exchange later ACB processing. processes trades, rewards (see format_CDC_exchange_rewards ).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_trades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CDC exchange file (FOR TRADES ONLY) — format_CDC_exchange_trades","text":"","code":"format_CDC_exchange_trades(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_trades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CDC exchange file (FOR TRADES ONLY) — format_CDC_exchange_trades","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_trades.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format CDC exchange file (FOR TRADES ONLY) — format_CDC_exchange_trades","text":"Original file name right file exchange called \"SPOT_TRADE.csv\", make sure right one. can usually accessed following steps: (1) connect CDC exchange. left menu, click \"Wallet\", choose \"Transactions\" tab. Pick desired dates. Unfortunately, CDC exchange history export supports 30 days time. , need export file merge manually use function. new changes exchange (3.0) transactions November 1st, 2022, one can go instead \"Archive\" button left vertical menu, choose dates (max 100 days), download trade transactions. zip file several transaction files inside. Choose \"SPOT_TRADE.csv\". newer versions transaction history file, CDC added three disclaimer character lines top file, messing headers. Thus, reading file read.csv(), add argument skip = 3. able read file normally.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_exchange_trades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format CDC exchange file (FOR TRADES ONLY) — format_CDC_exchange_trades","text":"","code":"if (FALSE) { format_CDC_exchange_trades(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_wallet.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CDC wallet file — format_CDC_wallet","title":"Format CDC wallet file — format_CDC_wallet","text":"Format .csv transaction history file Crypto.com DeFi wallet later ACB processing. One way download CRO staking rewards data blockchain visit http://crypto.barkisoft.de/ input CRO address. Keep default export option (\"Koinly\"). output CSV file transactions. Note: site use secure connection: use risks. file semi-column separated; using read.csv, add sep = \";\" argument.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_wallet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CDC wallet file — format_CDC_wallet","text":"","code":"format_CDC_wallet(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_wallet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CDC wallet file — format_CDC_wallet","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_CDC_wallet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format CDC wallet file — format_CDC_wallet","text":"","code":"if (FALSE) { format_CDC_wallet(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_adalite.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Adalite wallet file — format_adalite","title":"Format Adalite wallet file — format_adalite","text":"Format .csv transaction history file Adalite wallet later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_adalite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Adalite wallet file — format_adalite","text":"","code":"format_adalite(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_adalite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Adalite wallet file — format_adalite","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_adalite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Adalite wallet file — format_adalite","text":"","code":"if (FALSE) { format_adalite(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Binance earn file — format_binance","title":"Format Binance earn file — format_binance","text":"Format .csv earn history file Binance later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Binance earn file — format_binance","text":"","code":"format_binance(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Binance earn file — format_binance","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Binance earn file — format_binance","text":"get file. Download overall transaction report (include trades, rewards, & \"Referral Kickback\" rewards). get file, connect Binance account desktop, click \"Wallet\" (top right), \"Transaction History\", top-right, \"Generate statements\". \"Time\", choose \"Customized\" pick time frame. Warning: process WITHDRAWALS (see format_binance_withdrawals() function purpose).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Binance earn file — format_binance","text":"","code":"if (FALSE) { format_binance_earn(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_earn.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Binance earn file — format_binance_earn","title":"Format Binance earn file — format_binance_earn","text":"Format .csv earn history file Binance later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_earn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Binance earn file — format_binance_earn","text":"","code":"format_binance_earn(data, filetype = \"all\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_earn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Binance earn file — format_binance_earn","text":"data dataframe filetype file type use, one (\"\", transactions, \"earn\", just earn).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_earn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Binance earn file — format_binance_earn","text":"two ways get file. first, recommended option, download overall transaction report (also include e.g., \"Referral Kickback\" rewards). get file, connect Binance account desktop, click \"Wallet\" (top right), \"Transaction History\", top-right, \"Generate statements\". \"Time\", choose \"Customized\" pick time frame. option two, click \"Orders\" (top right), \"Earn History\", click \"Export\". \"Type\", choose \"Interest\", choose time frame (probably need choose \"Beyond 6 months - Custom\"). cases, allowed one year transactions. , might download one file merge using function. Warning: process TRADES WITHDRAWALS (see format_binance_trades() format_binance_withdrawals() functions purpose).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_earn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Binance earn file — format_binance_earn","text":"","code":"if (FALSE) { format_binance_earn(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_trades.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Binance trades file — format_binance_trades","title":"Format Binance trades file — format_binance_trades","text":"Format .xlsx trades history file Binance later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_trades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Binance trades file — format_binance_trades","text":"","code":"format_binance_trades(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_trades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Binance trades file — format_binance_trades","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_trades.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Binance trades file — format_binance_trades","text":"get file, connect Binance account desktop, click \"Orders\" (top right), \"Spot Order\", \"Spot Order\" submenu, choose \"Trade History\". Next, click \"Export Trade History\" choose time frame (probably need choose \"Beyond 6 months - Custom\"). case allowed one year transactions. , might download one file merge using function. Warning: process WITHDRAWALS associated fees. See format_binance_withdrawals() function purpose.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_trades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Binance trades file — format_binance_trades","text":"","code":"if (FALSE) { format_binance_trades(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_withdrawals.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Binance withdrawal file — format_binance_withdrawals","title":"Format Binance withdrawal file — format_binance_withdrawals","text":"Format .xlsx withdrawal history file Binance later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_withdrawals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Binance withdrawal file — format_binance_withdrawals","text":"","code":"format_binance_withdrawals(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_withdrawals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Binance withdrawal file — format_binance_withdrawals","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_withdrawals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Binance withdrawal file — format_binance_withdrawals","text":"get file, connect Binance account desktop, click \"Wallet\" (top right), \"Transaction History\", \"Type\" column, choose \"Withdraw\". Next, click \"Export Withdrawal History\" right choose time frame (probably need choose \"Customized\"). allowed choose 3 months, might download one file merge using function. Warning: process TRADES See format_binance_trades() function purpose.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_binance_withdrawals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Binance withdrawal file — format_binance_withdrawals","text":"","code":"if (FALSE) { format_binance_withdrawals(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_blockfi.html","id":null,"dir":"Reference","previous_headings":"","what":"Format BlockFi file — format_blockfi","title":"Format BlockFi file — format_blockfi","text":"Format .csv transaction history file BlockFi later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_blockfi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format BlockFi file — format_blockfi","text":"","code":"format_blockfi(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_blockfi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format BlockFi file — format_blockfi","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_blockfi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format BlockFi file — format_blockfi","text":"","code":"if (FALSE) { format_blockfi(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_celsius.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Celsius file — format_celsius","title":"Format Celsius file — format_celsius","text":"Format .csv transaction history file Celsius later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_celsius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Celsius file — format_celsius","text":"","code":"format_celsius(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_celsius.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Celsius file — format_celsius","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_celsius.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Celsius file — format_celsius","text":"","code":"if (FALSE) { format_celsius(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_coinsmart.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CoinSmart file — format_coinsmart","title":"Format CoinSmart file — format_coinsmart","text":"Format .csv transaction history file CoinSmart later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_coinsmart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CoinSmart file — format_coinsmart","text":"","code":"format_coinsmart(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_coinsmart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CoinSmart file — format_coinsmart","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_coinsmart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format CoinSmart file — format_coinsmart","text":"","code":"if (FALSE) { format_coinsmart(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_exodus.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Exodus wallet file — format_exodus","title":"Format Exodus wallet file — format_exodus","text":"Format .csv transaction history file Exodus wallet later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_exodus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Exodus wallet file — format_exodus","text":"","code":"format_exodus(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_exodus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Exodus wallet file — format_exodus","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_exodus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Exodus wallet file — format_exodus","text":"","code":"if (FALSE) { format_exodus(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_gemini.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Gemini file — format_gemini","title":"Format Gemini file — format_gemini","text":"Format .csv transaction history file Gemini later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_gemini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Gemini file — format_gemini","text":"","code":"format_gemini(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_gemini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Gemini file — format_gemini","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_gemini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Gemini file — format_gemini","text":"","code":"if (FALSE) { format_gemini(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_newton.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Newton file — format_newton","title":"Format Newton file — format_newton","text":"Format .csv transaction history file Newton later ACB processing. downloading Newton, please choose yearly reports format (\"CoinTracker Version\" \"Koinly Version\" supported time). multiple years, means might merge two datasets.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_newton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Newton file — format_newton","text":"","code":"format_newton(data, filetype = \"yearly\")"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_newton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Newton file — format_newton","text":"data dataframe filetype Newton file format use, one c(\"yearly\", \"cointracker\", \"koinly\"). \"yearly\" (default) supported time.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_newton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Newton file — format_newton","text":"","code":"if (FALSE) { format_newton(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_pooltool.html","id":null,"dir":"Reference","previous_headings":"","what":"Format ADA rewards from blockchain CSV — format_pooltool","title":"Format ADA rewards from blockchain CSV — format_pooltool","text":"Format .csv transaction history file Cardano PoolTool later ACB processing. Instructions: Use https://pooltool.io/ click \"rewards data taxes\", search ADA address, scroll bottom page, use export tool export transactions. Make sure use \"Generic(CSV)\" format.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_pooltool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format ADA rewards from blockchain CSV — format_pooltool","text":"","code":"format_pooltool(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_pooltool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format ADA rewards from blockchain CSV — format_pooltool","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_pooltool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format ADA rewards from blockchain CSV — format_pooltool","text":"","code":"if (FALSE) { format_pooltool(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_presearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Presearch wallet file — format_presearch","title":"Format Presearch wallet file — format_presearch","text":"Format .csv transaction history file Presearch later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_presearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Presearch wallet file — format_presearch","text":"","code":"format_presearch(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_presearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Presearch wallet file — format_presearch","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_presearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Presearch wallet file — format_presearch","text":"","code":"if (FALSE) { format_presearch(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_shakepay.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Shakepay file — format_shakepay","title":"Format Shakepay file — format_shakepay","text":"Format .csv transaction history file Shakepay later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_shakepay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Shakepay file — format_shakepay","text":"","code":"format_shakepay(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_shakepay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Shakepay file — format_shakepay","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_shakepay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Shakepay file — format_shakepay","text":"","code":"if (FALSE) { format_shakepay(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_suploss.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate superficial capital losses — format_suploss","title":"Calculate superficial capital losses — format_suploss","text":"Calculate superficial capital losses substracted total capital losses.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_suploss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate superficial capital losses — format_suploss","text":"","code":"format_suploss(data, cl = NULL)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_suploss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate superficial capital losses — format_suploss","text":"data data cl number cores use.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_suploss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate superficial capital losses — format_suploss","text":"","code":"if (FALSE) { format_suploss(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_uphold.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Uphold file — format_uphold","title":"Format Uphold file — format_uphold","text":"Format .csv transaction history file Uphold later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_uphold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Uphold file — format_uphold","text":"","code":"format_uphold(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_uphold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Uphold file — format_uphold","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_uphold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Uphold file — format_uphold","text":"","code":"if (FALSE) { format_uphold(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_wealthsimple.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Wealthsimple file — format_wealthsimple","title":"Format Wealthsimple file — format_wealthsimple","text":"Format .csv transaction history file Wealthsimple later ACB processing.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_wealthsimple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Wealthsimple file — format_wealthsimple","text":"","code":"format_wealthsimple(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_wealthsimple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Wealthsimple file — format_wealthsimple","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/format_wealthsimple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Wealthsimple file — format_wealthsimple","text":"","code":"if (FALSE) { format_wealthsimple(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/get_proceeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get proceeds of all sold coins — get_proceeds","title":"Get proceeds of all sold coins — get_proceeds","text":"Get proceeds sold coins, ACB sold coins, resulting difference two, capital gains.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/get_proceeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get proceeds of all sold coins — get_proceeds","text":"","code":"get_proceeds(data, tax.year, local.timezone)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/get_proceeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get proceeds of all sold coins — get_proceeds","text":"data dataframe formatted.ACB, tax.year year local.timezone time zone","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/get_proceeds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get proceeds of all sold coins — get_proceeds","text":"","code":"if (FALSE) { ACB(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/listby_coin.html","id":null,"dir":"Reference","previous_headings":"","what":"List transactions by coin — listby_coin","title":"List transactions by coin — listby_coin","text":"Provides list transactions, separated coin..","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/listby_coin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List transactions by coin — listby_coin","text":"","code":"listby_coin(data)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/listby_coin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List transactions by coin — listby_coin","text":"data dataframe","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/listby_coin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List transactions by coin — listby_coin","text":"","code":"if (FALSE) { listby_coin(formatted.ACB) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/match_prices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fair Market Value (FMV) of transactions — match_prices","title":"Get Fair Market Value (FMV) of transactions — match_prices","text":"Matches prices obtained fetch_prices() function transaction data frame.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/match_prices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fair Market Value (FMV) of transactions — match_prices","text":"","code":"match_prices(data, my.coins = NULL)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/match_prices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fair Market Value (FMV) of transactions — match_prices","text":"data dataframe .coins coins match","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/match_prices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Fair Market Value (FMV) of transactions — match_prices","text":"","code":"if (FALSE) { match_prices(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/merge_exchanges.html","id":null,"dir":"Reference","previous_headings":"","what":"List transactions by coin — merge_exchanges","title":"List transactions by coin — merge_exchanges","text":"Provides list transactions, separated coin..","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/merge_exchanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List transactions by coin — merge_exchanges","text":"","code":"merge_exchanges(...)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/merge_exchanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List transactions by coin — merge_exchanges","text":"... pass exchanges merged.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/merge_exchanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List transactions by coin — merge_exchanges","text":"","code":"if (FALSE) { merge_exchanges(formatted.data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/prepare_list_prices.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the list of coins for prices — prepare_list_prices","title":"Prepare the list of coins for prices — prepare_list_prices","text":"Prepare list coins prices.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/prepare_list_prices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the list of coins for prices — prepare_list_prices","text":"","code":"prepare_list_prices(   coins,   start.date,   end.date = lubridate::now(\"UTC\"),   force = FALSE )"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/prepare_list_prices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the list of coins for prices — prepare_list_prices","text":"coins coins include list. start.date date start reporting prices . end.date date end reporting prices . force Whether force recreating list.prices even though already exists (e.g., added new coins new dates).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/prepare_list_prices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare the list of coins for prices — prepare_list_prices","text":"crypto2::crypto_history API times bit capricious. might need try times process correctly without errors.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/prepare_list_prices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare the list of coins for prices — prepare_list_prices","text":"","code":"if (FALSE) { match_prices(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/print_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Print full crypto tax report — print_report","title":"Print full crypto tax report — print_report","text":"output full crypto tax report HTML format, can printed saved PDF.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/print_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print full crypto tax report — print_report","text":"","code":"print_report(tax.year, name, table.revenues, report.summary, sup.losses)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/print_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print full crypto tax report — print_report","text":"tax.year tax year desired. name Name individual report. table.revenues table revenues. report.summary report summary. sup.losses calculated superficial losses.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/print_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print full crypto tax report — print_report","text":"","code":"if (FALSE) { print_report() }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of ACB — report_overview","title":"Summary of ACB — report_overview","text":"Provides summary Adjusted Cost Base (ACB) per share, well realized unrealized gains/losses (plus net value), per coin.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of ACB — report_overview","text":"","code":"report_overview(   formatted.ACB,   today.data = TRUE,   tax.year = \"all\",   local.timezone = Sys.timezone() )"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of ACB — report_overview","text":"formatted.ACB formatted ACB data. today.data whether fetch today's data. tax.year tax year(s) include. local.timezone time zone use date report.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_overview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of ACB — report_overview","text":"","code":"if (FALSE) { report_overview(formatted.ACB) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_revenues.html","id":null,"dir":"Reference","previous_headings":"","what":"Report all revenues — report_revenues","title":"Report all revenues — report_revenues","text":"Provides summary revenues sources.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_revenues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report all revenues — report_revenues","text":"","code":"report_revenues(   formatted.ACB,   tax.year = \"all\",   local.timezone = Sys.timezone() )"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_revenues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report all revenues — report_revenues","text":"formatted.ACB formatted ACB data. tax.year tax year(s) include. local.timezone time zone use date report.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_revenues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report all revenues — report_revenues","text":"","code":"if (FALSE) { report_revenues(formatted.ACB) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of gains and losses — report_summary","title":"Summary of gains and losses — report_summary","text":"Provides summary realized capital gains losses (total).","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of gains and losses — report_summary","text":"","code":"report_summary(   formatted.ACB,   today.data = TRUE,   tax.year = \"all\",   local.timezone = Sys.timezone() )"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of gains and losses — report_summary","text":"formatted.ACB formatted ACB data. today.data whether fetch today's data. tax.year tax year(s) include. local.timezone time zone use date report.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/report_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of gains and losses — report_summary","text":"","code":"if (FALSE) { report_summary(formatted.ACB) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/shakepay.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data set of a fictive Shakepay transaction history file — shakepay","title":"Sample data set of a fictive Shakepay transaction history file — shakepay","text":"fictive Shakepay dataset demonstrate format_shakepay().","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/shakepay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data set of a fictive Shakepay transaction history file — shakepay","text":"","code":"shakepay"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/shakepay.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data set of a fictive Shakepay transaction history file — shakepay","text":"data frame 10 rows 11 variables: Transaction.Type transaction type Date date Amount.Debited amount debited Debit.Currency debit currency Amount.Credited amount credited Credit.Currency credit currency Buy...Sell.Rate \"spot rate\" trade Direction purchase, sale, credit Spot.Rate actual spot rate shakestats Source...Destination withdrawal address Blockchain.Transaction.ID blockchain transaction number","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/shakepay.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample data set of a fictive Shakepay transaction history file — shakepay","text":"https://shakepay.com/","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/tax_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a simple table of relevant tax information — tax_box","title":"Get a simple table of relevant tax information — tax_box","text":"Output simple table relevant tax information tax form line numbers.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/tax_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a simple table of relevant tax information — tax_box","text":"","code":"tax_box(report.summary, sup.losses, table.revenues, proceeds)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/tax_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a simple table of relevant tax information — tax_box","text":"report.summary report.summary sup.losses sup.losses table.revenues table.revenues proceeds proceeds","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/tax_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a simple table of relevant tax information — tax_box","text":"","code":"if (FALSE) { ACB(data) }"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/tax_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Format tax table for final HTML report — tax_table","title":"Format tax table for final HTML report — tax_table","text":"Format tax tables final rmd/html report.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/tax_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format tax table for final HTML report — tax_table","text":"","code":"tax_table(table, repeat.header = FALSE, type = 1)"},{"path":"https://cryptoltruist.github.io/cryptoTax/reference/tax_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format tax table for final HTML report — tax_table","text":"table table format repeat.header Logical, whether repeat headers bottom. type Type table, one 1 (default), 2, 3.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/news/index.html","id":"cryptotax-002","dir":"Changelog","previous_headings":"","what":"cryptoTax 0.0.2","title":"cryptoTax 0.0.2","text":"New Features: New pkgdown website two vignettes: one calculating ACB tax treatments decisions. Informative progress bars format_ACB format_suploss since functions extremely slow thousands transactions. Added example data sets (ACB, shakepay, CDC) New function: format_binance_earn, process Binance rewards. New function: format_binance, general version works general transaction report. Improvements: ACB_suploss integrates primary ACB function, accordingly gains new logical argument, suploss. format_suploss integrates ACB suploss = TRUE, gains greatly improved code base. add_quantities switches -loop dplyr code. Massive improvements speed using joins price lookups (instead making new API request row) prices coins USD CAD conversions. Added tests ACB superficial losses Updated format_newton new format Bug Fixes: format_ACB: Fixed bug whereas superficial loss quantity = 0 prevent computation ACB. Fixed bug NANO/XNO Fixed various R CMD check errors, warnings, notes.","code":""},{"path":"https://cryptoltruist.github.io/cryptoTax/news/index.html","id":"cryptotax-001","dir":"Changelog","previous_headings":"","what":"cryptoTax 0.0.1","title":"cryptoTax 0.0.1","text":"New package","code":""}]
